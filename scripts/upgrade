#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

if [ -z "${blog_admin:-}" ] ||
 [ -z "$blog_contentadmin" ] || 
 [ -z "$blog_usage" ] || 
 [ -z "$blog_publish" ] || 
 [ -z "$blog_delete" ] || 
 [ -z "$blog_categories" ] || 
 [ -z "$blog_media_admin" ] || 
 [ -z "$blog_media" ] || 
 [ -z "$blog_pages" ] || 
 [ -z "$blog_blogroll" ]; then
	blog_admin="false"
	blog_contentadmin="false"
	blog_usage="true"
	blog_publish="false"
	blog_delete="false"
	blog_categories="false"
	blog_media_admin="false"
	blog_media="false"
	blog_pages="false"
	blog_blogroll="false"
 	ynh_app_setting_set --app=$app --key=blog_admin --value=$blog_admin
 	ynh_app_setting_set --app=$app --key=blog_contentadmin --value=$blog_contentadmin
	ynh_app_setting_set --app=$app --key=blog_usage --value=$blog_usage
	ynh_app_setting_set --app=$app --key=blog_publish --value=$blog_publish
	ynh_app_setting_set --app=$app --key=blog_delete --value=$blog_delete
	ynh_app_setting_set --app=$app --key=blog_categories --value=$blog_categories
 	ynh_app_setting_set --app=$app --key=blog_media_admin --value=$blog_media_admin
	ynh_app_setting_set --app=$app --key=blog_media --value=$blog_media
	ynh_app_setting_set --app=$app --key=blog_pages --value=$blog_pages
	ynh_app_setting_set --app=$app --key=blog_blogroll --value=$blog_blogroll
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..."

	# Download, check integrity, uncompress and patch the source from app.src
	# In case of a new version, the url change from http://download.dotclear.org/latest/dotclear-X.X.X.tar.gz to http://download.dotclear.org/attic/dotclear-X.X.X.tar.gz
	src_url=$(cat $YNH_APP_BASEDIR/manifest.toml | toml_to_json | jq '.resources.sources.latest.url' -r)
	if ! curl --output /dev/null --silent --head --fail "$src_url"; then
	        ynh_setup_source --dest_dir="$install_dir" --source_id="attic"
	else
	        ynh_setup_source --dest_dir="$install_dir" --source_id="latest"
	fi
fi

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

# https://dotclear.org/documentation/2.0/admin/install
mkdir -p "$install_dir/"{cache,public}
setfacl -m d:u:www-data:rwx "$install_dir/"{cache,public}

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression --message="Upgrading system configurations related to $app..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

# Create a dedicated PHP-FPM config
ynh_add_fpm_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..." --weight=1

php_config=$install_dir/inc/config.php

ynh_backup_if_checksum_is_different --file=$php_config

cp $php_config.in $php_config

admin_url="${path%/}/admin/"

email=$(ynh_user_get_info --username=$admin --key=mail)

# Config as if we called in admin/install/wizard.php
ynh_replace_string --match_string="'DC_DBDRIVER', ''" --replace_string="'DC_DBDRIVER', 'mysqli'" --target_file=$php_config
ynh_replace_string --match_string="'DC_DBHOST', ''" --replace_string="'DC_DBHOST', 'localhost'" --target_file=$php_config
ynh_replace_string --match_string="'DC_DBUSER', ''" --replace_string="'DC_DBUSER', '$db_user'" --target_file=$php_config
ynh_replace_string --match_string="'DC_DBPASSWORD', ''" --replace_string="'DC_DBPASSWORD', '$db_pwd'" --target_file=$php_config
ynh_replace_string --match_string="'DC_DBNAME', ''" --replace_string="'DC_DBNAME', '$db_name'" --target_file=$php_config
ynh_replace_string --match_string="'DC_MASTER_KEY', ''" --replace_string="'DC_MASTER_KEY', '$master_key'" --target_file=$php_config
ynh_replace_string --match_string="'DC_ADMIN_URL', ''" --replace_string="'DC_ADMIN_URL', 'https://$domain$admin_url'" --target_file=$php_config
ynh_replace_string --match_string="'DC_ADMIN_MAILFROM', ''" --replace_string="'DC_ADMIN_MAILFROM', '$email'" --target_file=$php_config
ynh_replace_string --match_string="//define('DC_NOT_UPDATE', false);" --replace_string="define('DC_NOT_UPDATE', true);" --target_file=$php_config

# Adding LDAP login
ynh_add_config --template="../conf/class.auth.ldap.php" --destination="$install_dir/inc/class.auth.ldap.php"

cat << EOF >> $php_config

require dirname(__FILE__).'/class.auth.ldap.php';
define('DC_AUTH_CLASS','ldapDcAuth');
EOF

# Recalculate and store the checksum of the file for the next upgrade.
ynh_store_file_checksum --file=$php_config

chmod 400 "$php_config"
chown $app:$app "$php_config"

#=================================================
# UPDATING DATABASE
#=================================================

# Navigate to the admin panel to upgrade the database: https://dotclear.org/documentation/2.0/admin/upgrades
adminUrl="/admin/auth.php"
ynh_local_curl $adminUrl

#=================================================
# GENERIC FINALIZATION
#=================================================
# UPGRADE FAIL2BAN
#=================================================
ynh_script_progression --message="Reconfiguring Fail2Ban..." --weight=1

# Create a dedicated Fail2Ban config
ynh_add_fail2ban_config --logpath="/var/log/nginx/${domain}-error.log" --failregex="Invalid credentials in $install_dir/inc/class.auth.ldap.php .* client: <HOST>, .*https://$domain${path%/}/admin/auth.php"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
